{"ast":null,"code":"import _objectSpread from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/appsintegra/Pravin/Template/src/views/Dashboard/Dashboard.js\";\nimport React, { useEffect, useState } from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { bugs, website, server } from \"variables/general.js\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart } from \"variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { object } from \"prop-types\";\nvar useStyles = makeStyles(styles);\nexport default function Dashboard() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      updateTodo = _useState2[1];\n\n  var UserEmail = \"pravin@pravin.com\"; // const UserEmail = props.user.email;\n\n  var toDoList = [];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var getService, todoResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"http://localhost:3001/getService\");\n\n            case 2:\n              getService = _context.sent;\n              _context.next = 5;\n              return axios.post(\"http://localhost:3001/getList\", {\n                UserEmail: UserEmail\n              });\n\n            case 5:\n              todoResponse = _context.sent;\n              // console.log(\"pravin\", todoResponse, { getService });\n              toDoList = todoResponse.data.map(function (value, keys) {\n                return value.description;\n              });\n              console.log(\"pravin toDoList---\", toDoList.length);\n              updateTodo(todoResponse.data);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  function handleUpdate(_x) {\n    return _handleUpdate.apply(this, arguments);\n  }\n\n  function _handleUpdate() {\n    _handleUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type) {\n      var id,\n          res,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : \"\";\n\n              if (!(type === \"edit\")) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 4;\n              return axios.post(\"http://localhost:3001/updateList\", _objectSpread(_objectSpread({}, todo), {}, {\n                type: type\n              }));\n\n            case 4:\n              setOpen(false);\n\n            case 5:\n              if (!(type === \"status\")) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 8;\n              return axios.post(\"http://localhost:3001/updateList\", {\n                id: id.id,\n                status: id.event.target.checked,\n                type: type\n              });\n\n            case 8:\n              if (!(type === \"delete\")) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 11;\n              return axios.post(\"http://localhost:3001/updateList\", {\n                id: id,\n                type: type\n              });\n\n            case 11:\n              _context2.next = 13;\n              return axios.post(\"http://localhost:3001/getList\", {\n                UserEmail: UserEmail\n              });\n\n            case 13:\n              res = _context2.sent;\n              updateTodo(res.data);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _handleUpdate.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: dailySalesChart.data,\n    type: \"Line\",\n    options: dailySalesChart.options,\n    listener: dailySalesChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Daily Sales\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.successText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowUpward, {\n    className: classes.upArrowCardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }), \" 55%\"), \" \", \"increase in today sales.\")), /*#__PURE__*/React.createElement(CardFooter, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AccessTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), \" updated 4 minutes ago\")))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: emailsSubscriptionChart.data,\n    type: \"Bar\",\n    options: emailsSubscriptionChart.options,\n    responsiveOptions: emailsSubscriptionChart.responsiveOptions,\n    listener: emailsSubscriptionChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Email Subscriptions\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Last Campaign Performance\")), /*#__PURE__*/React.createElement(CardFooter, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AccessTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), \" campaign sent 2 days ago\")))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: completedTasksChart.data,\n    type: \"Line\",\n    options: completedTasksChart.options,\n    listener: completedTasksChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"Completed Tasks\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Last Campaign Performance\")), /*#__PURE__*/React.createElement(CardFooter, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AccessTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }), \" campaign sent 2 days ago\"))))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, toDoList.length > 0 && /*#__PURE__*/React.createElement(CustomTabs, {\n    title: \"Tasks:\",\n    headerColor: \"primary\",\n    tabs: [{\n      tabName: \"Bugs\",\n      tabIcon: BugReport,\n      tabContent: /*#__PURE__*/React.createElement(Tasks, {\n        checkedIndexes: [0, 3],\n        tasksIndexes: [0, 1, 2, 3, 4],\n        tasks: toDoList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      })\n    }, {\n      tabName: \"Website\",\n      tabIcon: Code,\n      tabContent: /*#__PURE__*/React.createElement(Tasks, {\n        checkedIndexes: [0],\n        tasksIndexes: [0, 1],\n        tasks: website,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      })\n    }, {\n      tabName: \"Server\",\n      tabIcon: Cloud,\n      tabContent: /*#__PURE__*/React.createElement(Tasks, {\n        checkedIndexes: [1],\n        tasksIndexes: [0, 1, 2],\n        tasks: server,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      })\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GridContainer, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, todos.length > 0 && todos.map(function (val) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: val.todo_id,\n      role: undefined,\n      dense: true,\n      button: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      onChange: function onChange(event) {\n        return handleUpdate(\"status\", {\n          id: val.todo_id,\n          event: event\n        });\n      },\n      edge: \"start\",\n      checked: val.status === 1 ? true : false,\n      disableRipple: true,\n      inputProps: {\n        \"aria-labelledby\": val.todo_id\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: val.todo_id,\n      primary: val.status === 1 ? /*#__PURE__*/React.createElement(Typography, {\n        type: \"body2\",\n        style: textStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 27\n        }\n      }, \" \", \"\".concat(val.title, \" - \").concat(val.date.split(\"T\")[0])) : /*#__PURE__*/React.createElement(Typography, {\n        type: \"body2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 27\n        }\n      }, \"\".concat(val.title, \" - \").concat(val.date.split(\"T\")[0]), \" \"),\n      secondary: val.status === 1 ? /*#__PURE__*/React.createElement(Typography, {\n        style: textStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 27\n        }\n      }, \" \", val.description, \" \") : /*#__PURE__*/React.createElement(Typography, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 27\n        }\n      }, \" \", val.description, \" \"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        return editList(val);\n      },\n      color: \"secondary\",\n      \"aria-label\": \"comments\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        return handleUpdate(\"delete\", val.todo_id);\n      },\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }))));\n  }))))));\n}","map":{"version":3,"sources":["/home/appsintegra/Pravin/Template/src/views/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","ChartistGraph","makeStyles","ArrowUpward","AccessTime","BugReport","Code","Cloud","GridItem","GridContainer","Tasks","CustomTabs","Card","CardHeader","CardBody","CardFooter","bugs","website","server","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Typography","Checkbox","IconButton","DeleteIcon","EditIcon","Grid","axios","dailySalesChart","emailsSubscriptionChart","completedTasksChart","styles","object","useStyles","Dashboard","classes","todos","updateTodo","UserEmail","toDoList","getData","get","getService","post","todoResponse","data","map","value","keys","description","console","log","length","handleUpdate","type","id","todo","setOpen","status","event","target","checked","res","options","animation","cardTitle","cardCategory","successText","upArrowCardCategory","stats","responsiveOptions","tabName","tabIcon","tabContent","root","val","todo_id","undefined","textStyle","title","date","split","editList"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport { bugs, website, server } from \"variables/general.js\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport axios from \"axios\";\n\nimport {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart,\n} from \"variables/charts.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { object } from \"prop-types\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  let [todos, updateTodo] = useState([]);\n  const UserEmail = \"pravin@pravin.com\";\n  // const UserEmail = props.user.email;\n  let toDoList = [];\n  let getData = async () => {\n    let getService = await axios.get(\"http://localhost:3001/getService\");\n    let todoResponse = await axios.post(\"http://localhost:3001/getList\", {\n      UserEmail,\n    });\n    // console.log(\"pravin\", todoResponse, { getService });\n\n    toDoList = todoResponse.data.map((value, keys) => value.description);\n    console.log(\"pravin toDoList---\", toDoList.length);\n    updateTodo(todoResponse.data);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function handleUpdate(type, id = \"\") {\n    if (type === \"edit\") {\n      await axios.post(\"http://localhost:3001/updateList\", { ...todo, type });\n      setOpen(false);\n    }\n    if (type === \"status\") {\n      await axios.post(\"http://localhost:3001/updateList\", {\n        id: id.id,\n        status: id.event.target.checked,\n        type,\n      });\n    }\n    if (type === \"delete\") {\n      await axios.post(\"http://localhost:3001/updateList\", { id, type });\n    }\n    let res = await axios.post(\"http://localhost:3001/getList\", { UserEmail });\n    updateTodo(res.data);\n  }\n\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={dailySalesChart.data}\n                type=\"Line\"\n                options={dailySalesChart.options}\n                listener={dailySalesChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Daily Sales</h4>\n              <p className={classes.cardCategory}>\n                <span className={classes.successText}>\n                  <ArrowUpward className={classes.upArrowCardCategory} /> 55%\n                </span>{\" \"}\n                increase in today sales.\n              </p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> updated 4 minutes ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"warning\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={emailsSubscriptionChart.data}\n                type=\"Bar\"\n                options={emailsSubscriptionChart.options}\n                responsiveOptions={emailsSubscriptionChart.responsiveOptions}\n                listener={emailsSubscriptionChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Email Subscriptions</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"danger\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={completedTasksChart.data}\n                type=\"Line\"\n                options={completedTasksChart.options}\n                listener={completedTasksChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Completed Tasks</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          {toDoList.length > 0 && (\n            <CustomTabs\n              title=\"Tasks:\"\n              headerColor=\"primary\"\n              tabs={[\n                {\n                  tabName: \"Bugs\",\n                  tabIcon: BugReport,\n                  tabContent: (\n                    <Tasks\n                      checkedIndexes={[0, 3]}\n                      tasksIndexes={[0, 1, 2, 3, 4]}\n                      tasks={toDoList}\n                    />\n                  ),\n                },\n                {\n                  tabName: \"Website\",\n                  tabIcon: Code,\n                  tabContent: (\n                    <Tasks\n                      checkedIndexes={[0]}\n                      tasksIndexes={[0, 1]}\n                      tasks={website}\n                    />\n                  ),\n                },\n                {\n                  tabName: \"Server\",\n                  tabIcon: Cloud,\n                  tabContent: (\n                    <Tasks\n                      checkedIndexes={[1]}\n                      tasksIndexes={[0, 1, 2]}\n                      tasks={server}\n                    />\n                  ),\n                },\n              ]}\n            />\n          )}\n          <GridContainer item xs={12} md={4}>\n            <List className={classes.root}>\n              {todos.length > 0 &&\n                todos.map((val) => (\n                  <ListItem key={val.todo_id} role={undefined} dense button>\n                    <ListItemIcon>\n                      <Checkbox\n                        onChange={(event) =>\n                          handleUpdate(\"status\", { id: val.todo_id, event })\n                        }\n                        edge=\"start\"\n                        checked={val.status === 1 ? true : false}\n                        disableRipple\n                        inputProps={{ \"aria-labelledby\": val.todo_id }}\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      id={val.todo_id}\n                      primary={\n                        val.status === 1 ? (\n                          <Typography type=\"body2\" style={textStyle}>\n                            {\" \"}\n                            {`${val.title} - ${val.date.split(\"T\")[0]}`}\n                          </Typography>\n                        ) : (\n                          <Typography type=\"body2\">\n                            {`${val.title} - ${val.date.split(\"T\")[0]}`}{\" \"}\n                          </Typography>\n                        )\n                      }\n                      secondary={\n                        val.status === 1 ? (\n                          <Typography style={textStyle}>\n                            {\" \"}\n                            {val.description}{\" \"}\n                          </Typography>\n                        ) : (\n                          <Typography> {val.description} </Typography>\n                        )\n                      }\n                    />\n\n                    <ListItemSecondaryAction>\n                      <IconButton\n                        onClick={() => editList(val)}\n                        color=\"secondary\"\n                        aria-label=\"comments\"\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton\n                        onClick={() => handleUpdate(\"delete\", val.todo_id)}\n                        edge=\"end\"\n                        aria-label=\"comments\"\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n            </List>\n          </GridContainer>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}