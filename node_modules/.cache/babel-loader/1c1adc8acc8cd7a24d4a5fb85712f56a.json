{"ast":null,"code":"import _regeneratorRuntime from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/appsintegra/Pravin/Template/src/components/AddPopup.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from 'axios';\nexport default function FormDialog(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var todolist = {\n    title: \"\",\n    description: \"\",\n    email: props.todo.email\n  };\n\n  var _React$useState3 = React.useState(todolist),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      todo = _React$useState4[0],\n      setTodo = _React$useState4[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleSubmit() {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var UserEmail, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post('http://localhost:3001/addList', todo);\n\n            case 2:\n              UserEmail = props.todo.email;\n              _context.next = 5;\n              return axios.post('http://localhost:3001/getList', {\n                UserEmail: UserEmail\n              });\n\n            case 5:\n              res = _context.sent;\n              props.updateLatest(res.data);\n              setOpen(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function handleChange(e) {\n    setTodo(_objectSpread(_objectSpread({}, todo), {}, _defineProperty({}, e.target.id, e.target.value)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Add To-Do\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"title\",\n    label: \"Title\",\n    type: \"text\",\n    onChange: function onChange(event) {\n      return handleChange(event);\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"description\",\n    label: \"Description\",\n    type: \"text\",\n    onChange: function onChange(event) {\n      return handleChange(event);\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["/home/appsintegra/Pravin/Template/src/components/AddPopup.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Fab","AddIcon","axios","FormDialog","props","useState","open","setOpen","todolist","title","description","email","todo","setTodo","handleClickOpen","handleClose","handleSubmit","post","UserEmail","res","updateLatest","data","handleChange","e","target","id","value","event"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,wBAChBX,KAAK,CAACY,QAAN,CAAe,KAAf,CADgB;AAAA;AAAA,MACjCC,IADiC;AAAA,MAC3BC,OAD2B;;AAGxC,MAAIC,QAAQ,GAAG;AACXC,IAAAA,KAAK,EAAE,EADI;AAEXC,IAAAA,WAAW,EAAE,EAFF;AAGXC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,IAAN,CAAWD;AAHP,GAAf;;AAHwC,yBAShBlB,KAAK,CAACY,QAAN,CAAeG,QAAf,CATgB;AAAA;AAAA,MASjCI,IATiC;AAAA,MAS3BC,OAT2B;;AAYxC,WAASC,eAAT,GAA2B;AACzBP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,WAASQ,WAAT,GAAuB;AACrBR,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAlBuC,WAoBzBS,YApByB;AAAA;AAAA;;AAAA;AAAA,6EAoBxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQd,KAAK,CAACe,IAAN,CAAW,+BAAX,EAA4CL,IAA5C,CADR;;AAAA;AAGMM,cAAAA,SAHN,GAGkBd,KAAK,CAACQ,IAAN,CAAWD,KAH7B;AAAA;AAAA,qBAIkBT,KAAK,CAACe,IAAN,CAAW,+BAAX,EAA4C;AAAEC,gBAAAA,SAAS,EAATA;AAAF,eAA5C,CAJlB;;AAAA;AAIMC,cAAAA,GAJN;AAKEf,cAAAA,KAAK,CAACgB,YAAN,CAAmBD,GAAG,CAACE,IAAvB;AACAd,cAAAA,OAAO,CAAC,KAAD,CAAP;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApBwC;AAAA;AAAA;;AA6BxC,WAASe,YAAT,CAAsBC,CAAtB,EAAyB;AACvBV,IAAAA,OAAO,iCACFD,IADE,2BAEJW,CAAC,CAACC,MAAF,CAASC,EAFL,EAEUF,CAAC,CAACC,MAAF,CAASE,KAFnB,GAAP;AAID;;AAGD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,SAAX;AAAqB,kBAAW,KAAhC;AAAuC,IAAA,OAAO,EAAEZ,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAER,IAAd;AAAoB,IAAA,OAAO,EAAES,WAA7B;AAA0C,uBAAgB,mBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,EAAE,kBAAAY,KAAK;AAAA,aAAIL,YAAY,CAACK,KAAD,CAAhB;AAAA,KANjB;AAOE,IAAA,SAAS,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAE,kBAAAA,KAAK;AAAA,aAAIL,YAAY,CAACK,KAAD,CAAhB;AAAA,KALjB;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAFF,eAqBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEX,YAAjB;AAA+B,IAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CArBF,CAJF,CADF;AAqCD","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from 'axios';\n\n\nexport default function FormDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  let todolist = {\n      title: \"\",\n      description: \"\",\n      email: props.todo.email\n  }\n\n  const [todo, setTodo] = React.useState(todolist)\n\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n    \n  async function handleSubmit() {\n    await axios.post('http://localhost:3001/addList', todo)\n    \n    let UserEmail = props.todo.email;\n    let res = await axios.post('http://localhost:3001/getList', { UserEmail })\n    props.updateLatest(res.data)\n    setOpen(false);\n  }\n  \n  function handleChange(e) {\n    setTodo({\n      ...todo,\n      [e.target.id]: e.target.value\n    })\n  }\n\n\n  return (\n    <div>\n      <Fab color=\"primary\" aria-label=\"add\"  onClick={handleClickOpen}>\n        <AddIcon />\n      </Fab>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add To-Do</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Title\"\n            type=\"text\"\n            onChange={event => handleChange(event)}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            onChange={event => handleChange(event)}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}