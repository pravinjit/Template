{"ast":null,"code":"import _defineProperty from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/appsintegra/Pravin/Template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/appsintegra/Pravin/Template/src/views/Dashboard/Dashboard.js\";\nimport React, { useEffect, useState } from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { bugs, website, server } from \"variables/general.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Propic from \"../../assets/img/new_logo.png\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport AddPopup from \"../../components/AddPopup\";\nimport logout from \"../../actions/logoutUser\";\nimport clearAlert from \"../../actions/clearAlert\";\nimport axios from \"axios\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart } from \"variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { object } from \"prop-types\";\nvar useStyles = makeStyles(styles);\nvar textStyle = {\n  color: \"red\",\n  textDecoration: \"line-through\"\n};\nvar paddingStyle = {\n  padding: \"30px\"\n};\nvar padding = {\n  \"float\": \"right\",\n  marginTop: \"-10px\"\n};\nvar logOutpadding = {\n  \"float\": \"right\",\n  marginTop: \"0px\"\n};\nexport default function Dashboard(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      updateTodo = _useState2[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var todolist = {\n    title: \"\",\n    description: \"\",\n    id: \"\",\n    // email: props.user.email,\n    email: \"pravin@pravin.com\"\n  };\n  var user = {\n    firstName: \"pravin\"\n  }; // let [auth] = useState(props.user);\n\n  var _useState3 = useState(user),\n      _useState4 = _slicedToArray(_useState3, 1),\n      auth = _useState4[0];\n\n  var _React$useState3 = React.useState(todolist),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      todo = _React$useState4[0],\n      setTodo = _React$useState4[1]; // const UserEmail = props.user.email;\n\n\n  var UserEmail = \"pravin@pravin.com\";\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(\"http://localhost:3001/getList\", {\n                UserEmail: UserEmail\n              });\n\n            case 2:\n              res = _context.sent;\n              console.log(\"pravin\", res);\n              updateTodo(res.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var _updateLatest = function updateLatest(todo) {\n    return updateTodo(todo);\n  };\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function _editList(val) {\n    setTodo({\n      title: val.title,\n      description: val.description,\n      id: val.todo_id\n    });\n    setOpen(true);\n  }\n\n  function handleChange(e) {\n    setTodo(_objectSpread(_objectSpread({}, todo), {}, _defineProperty({}, e.target.id, e.target.value)));\n  }\n\n  function handleUpdate(_x) {\n    return _handleUpdate.apply(this, arguments);\n  }\n\n  function _handleUpdate() {\n    _handleUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type) {\n      var id,\n          res,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : \"\";\n\n              if (!(type === \"edit\")) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 4;\n              return axios.post(\"http://localhost:3001/updateList\", _objectSpread(_objectSpread({}, todo), {}, {\n                type: type\n              }));\n\n            case 4:\n              setOpen(false);\n\n            case 5:\n              if (!(type === \"status\")) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 8;\n              return axios.post(\"http://localhost:3001/updateList\", {\n                id: id.id,\n                status: id.event.target.checked,\n                type: type\n              });\n\n            case 8:\n              if (!(type === \"delete\")) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 11;\n              return axios.post(\"http://localhost:3001/updateList\", {\n                id: id,\n                type: type\n              });\n\n            case 11:\n              _context2.next = 13;\n              return axios.post(\"http://localhost:3001/getList\", {\n                UserEmail: UserEmail\n              });\n\n            case 13:\n              res = _context2.sent;\n              updateTodo(res.data);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _handleUpdate.apply(this, arguments);\n  }\n\n  var handleLogOut = function handleLogOut() {\n    props.logout();\n    props.history.push(\"/login\");\n  };\n\n  if (props.user == \"undefined\") {\n    props.history.push(\"/login\");\n  }\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: paddingStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: padding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: auth.firstName,\n    src: Propic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }), \"Hi \", auth.firstName), /*#__PURE__*/React.createElement(AddPopup, {\n    updateLatest: function updateLatest(todo) {\n      return _updateLatest(todo);\n    },\n    editList: function editList() {\n      return _editList();\n    },\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: logOutpadding,\n    onClick: function onClick() {\n      return handleLogOut();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, \"Log Out\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, todos.length > 0 && todos.map(function (val) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: val.todo_id,\n      role: undefined,\n      dense: true,\n      button: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      onChange: function onChange(event) {\n        return handleUpdate(\"status\", {\n          id: val.todo_id,\n          event: event\n        });\n      },\n      edge: \"start\",\n      checked: val.status === 1 ? true : false,\n      disableRipple: true,\n      inputProps: {\n        \"aria-labelledby\": val.todo_id\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: val.todo_id,\n      primary: val.status === 1 ? /*#__PURE__*/React.createElement(Typography, {\n        type: \"body2\",\n        style: textStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 23\n        }\n      }, \" \", \"\".concat(val.title, \" - \").concat(val.date.split(\"T\")[0])) : /*#__PURE__*/React.createElement(Typography, {\n        type: \"body2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }\n      }, \"\".concat(val.title, \" - \").concat(val.date.split(\"T\")[0]), \" \"),\n      secondary: val.status === 1 ? /*#__PURE__*/React.createElement(Typography, {\n        style: textStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 23\n        }\n      }, \" \", val.description, \" \") : /*#__PURE__*/React.createElement(Typography, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 23\n        }\n      }, \" \", val.description, \" \"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        return _editList(val);\n      },\n      color: \"secondary\",\n      \"aria-label\": \"comments\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        return handleUpdate(\"delete\", val.todo_id);\n      },\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }))));\n  }))), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, \"Edit To-Do\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"title\",\n    label: \"Title\",\n    type: \"text\",\n    defaultValue: todo.title,\n    onChange: function onChange(event) {\n      return handleChange(event);\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"description\",\n    label: \"Description\",\n    type: \"text\",\n    defaultValue: todo.description,\n    onChange: function onChange(event) {\n      return handleChange(event);\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return handleUpdate(\"edit\");\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["/home/appsintegra/Pravin/Template/src/views/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","ChartistGraph","ArrowUpward","AccessTime","BugReport","Code","Cloud","GridItem","GridContainer","Tasks","CustomTabs","Card","CardHeader","CardBody","CardFooter","bugs","website","server","makeStyles","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Typography","Avatar","Propic","Checkbox","IconButton","DeleteIcon","EditIcon","Grid","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Button","AddPopup","logout","clearAlert","axios","dailySalesChart","emailsSubscriptionChart","completedTasksChart","styles","object","useStyles","textStyle","color","textDecoration","paddingStyle","padding","marginTop","logOutpadding","Dashboard","props","todos","updateTodo","open","setOpen","todolist","title","description","id","email","user","firstName","auth","todo","setTodo","UserEmail","getData","post","res","console","log","data","updateLatest","handleClose","editList","val","todo_id","handleChange","e","target","value","handleUpdate","type","status","event","checked","handleLogOut","history","push","classes","root","length","map","undefined","date","split"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport { bugs, website, server } from \"variables/general.js\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Propic from \"../../assets/img/new_logo.png\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nimport AddPopup from \"../../components/AddPopup\";\n\nimport logout from \"../../actions/logoutUser\";\nimport clearAlert from \"../../actions/clearAlert\";\n\nimport axios from \"axios\";\n\nimport {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart,\n} from \"variables/charts.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { object } from \"prop-types\";\n\nconst useStyles = makeStyles(styles);\n\nlet textStyle = {\n  color: \"red\",\n  textDecoration: \"line-through\",\n};\nlet paddingStyle = {\n  padding: \"30px\",\n};\n\nlet padding = {\n  float: \"right\",\n  marginTop: \"-10px\",\n};\n\nlet logOutpadding = {\n  float: \"right\",\n  marginTop: \"0px\",\n};\n\nexport default function Dashboard(props) {\n  let [todos, updateTodo] = useState([]);\n  let [open, setOpen] = React.useState(false);\n  let todolist = {\n    title: \"\",\n    description: \"\",\n    id: \"\",\n    // email: props.user.email,\n    email: \"pravin@pravin.com\",\n  };\n  const user = {\n    firstName: \"pravin\",\n  };\n\n  // let [auth] = useState(props.user);\n  let [auth] = useState(user);\n  const [todo, setTodo] = React.useState(todolist);\n\n  // const UserEmail = props.user.email;\n  const UserEmail = \"pravin@pravin.com\";\n  let getData = async () => {\n    let res = await axios.post(\"http://localhost:3001/getList\", { UserEmail });\n    console.log(\"pravin\", res);\n\n    updateTodo(res.data);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  let updateLatest = (todo) => updateTodo(todo);\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function editList(val) {\n    setTodo({\n      title: val.title,\n      description: val.description,\n      id: val.todo_id,\n    });\n    setOpen(true);\n  }\n\n  function handleChange(e) {\n    setTodo({\n      ...todo,\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  async function handleUpdate(type, id = \"\") {\n    if (type === \"edit\") {\n      await axios.post(\"http://localhost:3001/updateList\", { ...todo, type });\n      setOpen(false);\n    }\n    if (type === \"status\") {\n      await axios.post(\"http://localhost:3001/updateList\", {\n        id: id.id,\n        status: id.event.target.checked,\n        type,\n      });\n    }\n    if (type === \"delete\") {\n      await axios.post(\"http://localhost:3001/updateList\", { id, type });\n    }\n    let res = await axios.post(\"http://localhost:3001/getList\", { UserEmail });\n    updateTodo(res.data);\n  }\n\n  let handleLogOut = () => {\n    props.logout();\n    props.history.push(\"/login\");\n  };\n\n  if (props.user == \"undefined\") {\n    props.history.push(\"/login\");\n  }\n  const classes = useStyles();\n\n  return (\n    <div style={paddingStyle}>\n      <div style={padding}>\n        <Avatar alt={auth.firstName} src={Propic} />\n        Hi {auth.firstName}\n      </div>\n      <AddPopup\n        updateLatest={(todo) => updateLatest(todo)}\n        editList={() => editList()}\n        todo={todo}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        style={logOutpadding}\n        onClick={() => handleLogOut()}\n      >\n        Log Out\n      </Button>\n\n      <Grid item xs={12} md={4}>\n        <List className={classes.root}>\n          {todos.length > 0 &&\n            todos.map((val) => (\n              <ListItem key={val.todo_id} role={undefined} dense button>\n                <ListItemIcon>\n                  <Checkbox\n                    onChange={(event) =>\n                      handleUpdate(\"status\", { id: val.todo_id, event })\n                    }\n                    edge=\"start\"\n                    checked={val.status === 1 ? true : false}\n                    disableRipple\n                    inputProps={{ \"aria-labelledby\": val.todo_id }}\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  id={val.todo_id}\n                  primary={\n                    val.status === 1 ? (\n                      <Typography type=\"body2\" style={textStyle}>\n                        {\" \"}\n                        {`${val.title} - ${val.date.split(\"T\")[0]}`}\n                      </Typography>\n                    ) : (\n                      <Typography type=\"body2\">\n                        {`${val.title} - ${val.date.split(\"T\")[0]}`}{\" \"}\n                      </Typography>\n                    )\n                  }\n                  secondary={\n                    val.status === 1 ? (\n                      <Typography style={textStyle}>\n                        {\" \"}\n                        {val.description}{\" \"}\n                      </Typography>\n                    ) : (\n                      <Typography> {val.description} </Typography>\n                    )\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={() => editList(val)}\n                    color=\"secondary\"\n                    aria-label=\"comments\"\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton\n                    onClick={() => handleUpdate(\"delete\", val.todo_id)}\n                    edge=\"end\"\n                    aria-label=\"comments\"\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n        </List>\n      </Grid>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit To-Do</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Title\"\n            type=\"text\"\n            defaultValue={todo.title}\n            onChange={(event) => handleChange(event)}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            defaultValue={todo.description}\n            onChange={(event) => handleChange(event)}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleUpdate(\"edit\")} color=\"primary\">\n            Update\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}